@use "../../../shared/styles/shared.scss" as *;

// timing control selection
.search {
  @include wh100();

  position: relative;

  &__grid {
    $tag_size: 3rem;

    @include absCenter();
    @include rounded(2rem);
    @include showAni();

    & {
      // width: calc(100% - 2 * 8rem);
      height: fit-content;
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: auto repeat(5, 1fr);
      gap: 1rem;
      background-color: rgba($gc9, 0.3);
    }

    &__header {
      position: relative;
      height: 6rem;
      padding-left: 16rem;
      text-align: center;

      h2.section-header {
        @include flex($gap: 2rem);

        span {
          font-size: 3.2rem;
          color: $mc0;
        }

        svg.time-selection-icon {
          height: 4rem;
          filter: drop-shadow(0 0 1rem $mc9);
        }
      }
    }

    &__row {
      height: calc(2.4 * $tag_size);
      display: grid;
      grid-template-columns: 16rem repeat(4, 1fr);
      grid-template-rows: 1fr;
      gap: 1rem;
      user-select: none;

      @for $i from 2 through 6 {
        &:nth-child(#{$i}) {
          &:has(.time-control:hover) {
            .timing-header {
              filter: drop-shadow(0 0 1rem $mc0);

              .header-icon {
                @if $i == 2 {
                  path {
                    fill: $mc0;
                  }
                } @else if $i == 3 {
                  polygon {
                    stroke: $mc0;
                  }
                } @else if $i >= 4 {
                  path {
                    stroke: $mc0;
                  }
                }
              }
            }
          }
        }
      }

      .timing-header {
        @include flex(row, start, center, 2rem);

        .header-icon {
          height: 4rem;
        }

        span {
          font-size: 2.4rem;
        }
      }

      .time-control {
        @include flex();

        position: relative;
        border-bottom: solid 0.4rem $gc8;
        border-radius: 1rem;
        overflow: hidden;
        width: calc(5 * $tag_size);

        &:hover {
          cursor: pointer;
          border-color: $gc0;

          .timing-tag {
            color: $mc0;
            filter: drop-shadow(0 0 1rem $mc0);

            &::after {
              background-color: $mc0;
            }
          }
        }

        &:active {
          border-top: solid 0.3rem #0000;
          border-bottom: none;

          &::after {
            background-color: $gc8;
          }
        }

        &::after {
          @include subCl();

          z-index: 0;
          background-color: $gc9;
        }

        .timing-tag {
          @include flex();
          @include wh100();

          height: $tag_size;
          z-index: 1;
          color: $gc6;

          .num {
            z-index: 1;
            height: 100%;
            font-size: $tag_size;

            &:nth-child(2) {
              margin-right: calc($tag_size / 5);
            }

            &:nth-child(6) {
              margin-right: calc($tag_size / 5);
            }
          }

          .char {
            z-index: 1;
            display: flex;
            align-items: end;
            height: 100%;
            font-size: calc($tag_size * 0.6);

            &:nth-child(2) {
              margin-left: calc($tag_size / 5);
            }
          }

          .sep {
            z-index: 1;
            font-size: calc($tag_size * 0.6);
            margin: calc($tag_size / 5);
          }
        }
      }
    }
  }
}

// resize
@media (max-width: 700px) {
  $tag_size: 3.2rem;

  .search {
    height: 100%;
    padding: 0;
    overflow-y: scroll;

    &::-webkit-scrollbar {
      display: none;
    }

    &__grid {
      position: unset;
      width: 100%;
      background-color: #0000;
      transform: none;

      &__header {
        padding: 0;
      }

      &__row {
        grid-template-columns: repeat(4, 1fr);
        height: unset;

        .timing-header {
          grid-column: span 4;

          padding: 2rem;

          .header-icon {
            height: 3rem;
          }

          span {
            font-size: 2.4rem;
            font-weight: 800;
          }
        }

        .time-control {
          height: calc(3 * $tag_size);

          .timing-tag {
            height: $tag_size;

            .num {
              font-size: $tag_size;

              &:nth-child(2) {
                margin-right: calc($tag_size / 5);
              }

              &:nth-child(6) {
                margin-right: calc($tag_size / 5);
              }
            }

            .char {
              font-size: calc($tag_size * 0.6);

              &:nth-child(2) {
                margin-left: calc($tag_size / 5);
              }
            }

            .sep {
              font-size: calc($tag_size * 0.6);
              margin: calc($tag_size / 5);
            }
          }
        }
      }
    }
  }
}
