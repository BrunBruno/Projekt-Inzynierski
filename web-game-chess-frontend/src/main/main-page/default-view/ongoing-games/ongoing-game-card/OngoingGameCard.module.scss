@use "../../../../../shared/styles/shared.scss" as *;

$board-size: 20rem;

// user game card
.card {
  position: relative;
  overflow: hidden;
  background-color: rgba($gc9, 0.6);
  border-radius: 1rem;
  border-bottom: solid 0.3rem $mc7;

  // board grid position background
  .mini-grid {
    @include square($board-size);

    aspect-ratio: 1/1 !important;
    position: relative;
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(8, 1fr);
    border-radius: 1rem;
    overflow: hidden;

    .field {
      @include square(calc($board-size / 8));

      background-size: contain;
      background-repeat: no-repeat;
      opacity: 0.1;

      .bg-piece {
        // display: none;
        transform: scale(0.8);
      }
    }

    .light-f {
      background-color: $mc0;
    }

    .dark-f {
      background-color: $mc9;
    }

    .players {
      @include abs-center;

      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: calc(0.1 * $board-size);

      &__sep {
        @include flex($direction: column, $gap: 1rem);

        font-size: calc(0.1 * $board-size);
        font-weight: bold;
        padding: 0 1rem;

        .vs-icon {
          height: 3rem;
        }

        span {
          @include flex;

          position: relative;
          white-space: nowrap;
          width: fit-content;

          &:nth-child(1) {
            height: calc(0.25 * $board-size);
          }

          &:nth-child(2) {
            font-size: calc(0.1 * $board-size);
            color: $mc0;
          }

          @mixin sign() {
            position: absolute;
            top: -1rem;
            right: -1rem;
            height: fit-content;
            font-size: 2rem;
          }

          span.p {
            @include sign;

            color: $success-color-m;
          }

          span.m {
            @include sign;

            color: $danger-color-m;
          }
        }
      }

      .player {
        display: grid;
        grid-template-rows: calc(0.25 * $board-size) auto;
        gap: 1rem;

        @mixin player-img($bg_color) {
          @include flex;
          @include square(calc(0.2 * $board-size));

          padding: 0.6rem;
          border-radius: 100%;
          background-color: $bg_color;

          .player-img {
            @include wh100;

            border-radius: 100%;
            object-fit: cover;
          }
        }

        .white-player-img {
          @include player-img(#fff);
        }

        .black-player-img {
          @include player-img(#000);
        }

        .player-data {
          @include flex($direction: column);

          span {
            font-size: calc(0.06 * $board-size);

            span {
              color: $mc3;
            }

            &:nth-child(3) {
              font-weight: bold;
            }
          }
        }
      }
    }

    .date {
      position: absolute;
      top: 0;
      right: 0;
      padding: 1rem;
      color: $gc5;
    }
  }
}

// resize
