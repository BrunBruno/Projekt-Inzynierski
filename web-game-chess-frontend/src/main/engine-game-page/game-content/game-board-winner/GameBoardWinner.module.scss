@use "../../../../shared/styles/shared.scss" as *;

// winner window container
.winner {
  @include absCenter();
  @include wh100();
  @include flex();

  z-index: 100;
  background-color: rgba(#000, 0.7);

  &__content {
    @include emergeAni();

    & {
      background-color: $gc9;
      border-radius: 4rem;
      overflow: hidden;
    }

    .title {
      position: relative;
      font-size: 3rem;
      color: $mc5;
      white-space: nowrap;
      padding: 2rem 8rem;
      font-weight: bold;
      text-align: center;
      text-shadow: 0.2rem 0 $mc9;

      @mixin subEle() {
        @include subCl(2rem);

        width: 4rem;
        height: 8rem;
        bottom: -8rem;
      }

      &::after {
        @include subEle();

        left: 0;
        border-top-left-radius: 4rem;
      }
      &::before {
        @include subEle();

        right: 0;
        border-top-right-radius: 4rem;
      }

      &.white-winner {
        background-color: #fff;
        &::after {
          box-shadow: -0.1rem -4rem 0 0 #fff;
        }
        &::before {
          box-shadow: 0.1rem -4rem 0 0 #fff;
        }
      }

      &.black-winner {
        background-color: #000;
        &::after {
          box-shadow: -0.1rem -4rem 0 0 #000;
        }
        &::before {
          box-shadow: 0.1rem -4rem 0 0 #000;
        }
      }
    }

    // end game result data
    &__info {
      @include flex($direction: column);

      border-radius: 4rem;
      border: 0.3rem solid $gc8;
      border-top: 0.6rem solid $gc8;
      overflow: hidden;
      padding-bottom: 2rem;

      &__players {
        @include flex($gap: 2rem);

        width: 100%;
        padding: 2rem;

        .player {
          @include flex($direction: column, $gap: 0.5rem);

          @mixin playerImg($bg-color) {
            @include flex();
            @include circle(10rem);

            padding: 1rem;
            background-color: $bg-color;

            .player-img {
              @include wh100();
              border-radius: 100%;
            }
          }

          .white-player-img {
            @include playerImg(#fff);
          }

          .black-player-img {
            @include playerImg(#000);
          }

          .player-data {
            @include flex($direction: column, $gap: 0.2rem);

            span {
              font-size: 2rem;

              span {
                color: $mc3;
              }
            }
          }
        }

        .vs {
          @include flex($direction: column, $gap: 1rem);

          font-size: 3rem;
          font-weight: bold;

          span {
            @include flex();

            position: relative;
            white-space: nowrap;
            width: fit-content;

            &:nth-child(1) {
              height: 6rem;
            }

            &:nth-child(2) {
              font-size: 2.2rem;
              color: $mc0;
            }

            @mixin sign() {
              position: absolute;
              top: -1rem;
              right: -1rem;
              height: fit-content;
              font-size: 2rem;
            }

            span.p {
              @include sign();
              color: $success-color-m;
            }

            span.m {
              @include sign();
              color: $danger-color-m;
            }
          }
        }
      }

      &__buttons {
        @include flex();

        width: 100%;
        padding: 2rem;

        @mixin gameActionButton() {
          @include button(2.4rem);

          & {
            border-radius: 0;
            width: 50%;
            padding: 1rem 4rem;
          }
        }

        .new-game {
          @include gameActionButton();
          & {
            @include mainMButton();

            & {
              border-top-left-radius: 1rem;
              border-bottom-left-radius: 1rem;
            }
          }
        }

        .re-game {
          @include gameActionButton();
          & {
            @include secMButton();

            & {
              border-top-right-radius: 1rem;
              border-bottom-right-radius: 1rem;
            }
          }
        }
      }

      .leave {
        button {
          @include button(1.6rem);

          & {
            color: $mc0;
            background-color: #0000;
            border-radius: 0;
          }

          &:hover {
            color: $mc4;
            box-shadow: inset 0 -0.2rem 0 0 $mc4;
          }
        }
      }
    }
    //*/
  }
}
//*/

// resize
//*/
