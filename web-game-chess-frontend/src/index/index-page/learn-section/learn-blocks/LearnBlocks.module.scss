@import "../../../Index.scss";

// z-pattern container
.zpattern {
  display: grid;
  grid-template-rows: repeat(4, 1fr);
  padding: 0 8rem;

  // z-patter grid row
  &__row {
    position: relative;
    display: grid;
    gap: 8rem;
    padding: 4rem 8rem;

    // to create z pattern
    &:nth-child(odd) {
      grid-template-columns: 40rem auto;

      .row-line-icon {
        svg.pawn-line {
          transform: rotateY(0deg);
        }
      }
    }

    &:nth-child(even) {
      grid-template-columns: auto 40rem;

      .row-line-icon {
        svg.pawn-line {
          transform: rotateY(180deg);
        }
      }
    }

    .row-line-icon {
      @include flex(row, center, center, 0);

      position: absolute;
      z-index: 1;
      bottom: 0;
      width: 100%;

      &.active-line {
        svg.pawn-line {
          filter: drop-shadow(0 0 0.5rem $mc0) brightness(100%);
        }
      }

      svg.pawn-line {
        height: 3.8rem;
        filter: drop-shadow(0 0 0 $mc0) brightness(20%);
        transition: filter 0.5s 0.5s;
      }
    }

    // row icons
    &__icon {
      @include flex(column, center, center, 0);
      @include square(100%);

      position: relative;
      z-index: 1;

      &::after {
        @include subCl(0, 0);
        @include absCenter();
        @include circle(60%);

        z-index: -1;
        background-color: rgba($mc0, 0.1);
        filter: blur(4rem);
      }

      @mixin iconCon() {
        @include wh100();
        @include flex();

        position: relative;
      }

      .pieces-con {
        @include iconCon();

        .board-svg {
          @include absCenter();

          height: 100%;
          z-index: -1;
          opacity: 0.2;
          border-radius: 100%;
          transform: translate(-50%, -40%) rotateX(60deg) rotateZ(45deg);
          filter: blur(0.4rem);
        }

        .piece-img {
          position: absolute;
          height: 40%;
          filter: drop-shadow(0 0 1rem $mc3);
          transform: rotate(0) translateX(0) translateY(0);
          transition: transform 1s 1s;
        }

        &.active-icon {
          .piece-img {
            @for $i from 1 through 5 {
              &:nth-child(#{$i}) {
                transform: rotate(calc(($i - 3) * 20deg)) translateX(($i - 3) * 8rem) translateY(-5rem);
              }
            }
          }
        }
      }

      .counter-con {
        @include iconCon();

        .trophy-svg {
          @include absCenter();

          height: 60%;
          z-index: -1;
          opacity: 0.2;
          filter: blur(0.4rem);
        }

        .screen {
          display: grid;
          grid-template-columns: repeat(4, 1fr);
          gap: 0.5rem;

          p.counter-number {
            @include rounded(1rem);
            @include flex(row, start, center, 0);

            width: 9rem;
            height: 14rem;
            background-color: #000;
            border-top: solid 0.4rem $mc7;
            border-right: solid 0.4rem $mc7;
            font-family: "Knewave";
            font-size: 10rem;
            user-select: none;
            box-shadow: 0 0 2rem 0 $mc3;
          }
        }
      }

      .engine-con {
        @include iconCon();

        .mother-board-svg {
          @include absCenter();

          height: 70%;
          z-index: -1;
          opacity: 0.2;
          filter: blur(0.4rem);
        }

        .engine-svg {
          height: 80%;
          transform: rotate(0);
          transition: transform 1s 1s;

          .st0 {
            fill: none;
            stroke: $mc0;
            stroke-width: 2;
            stroke-linecap: round;
            stroke-linejoin: round;
            stroke-miterlimit: 10;
          }

          path {
            &:nth-child(2) {
              stroke: $mc7;
            }
          }

          line {
            &:nth-child(odd) {
              stroke: $mc7;
            }

            &:nth-child(even) {
              stroke: $mc0;
            }
          }
        }

        &.active-icon {
          .engine-svg {
            animation: engineAni 2s linear 1s forwards;

            @keyframes engineAni {
              0% {
                transform: rotate(0deg) scale(1);
              }
              25% {
                transform: rotate(100deg) scale(0.8);
              }
              50% {
                transform: rotate(200deg) scale(1.1);
              }
              75% {
                transform: rotate(100deg) scale(0.8);
              }
              100% {
                transform: rotate(0deg) scale(1);
              }
            }
          }
        }
      }

      .message-con {
        @include iconCon();

        .community-svg {
          @include absCenter();

          height: 80%;
          z-index: -1;
          opacity: 0.2;
          filter: blur(0.4rem);
        }

        .message-svg {
          position: absolute;
          height: 32%;
          opacity: 0;

          transform: translateY(-50%) rotateY(180deg);

          &:nth-child(1) {
            top: 35%;
            left: 6rem;
            transform: translate(-4rem, 0) rotateY(180deg) rotateZ(-20deg);
            transition: all 1s 0.5s;
          }

          &:nth-child(2) {
            top: 50%;
            right: 6rem;
            transform: translate(4rem, 0) rotateY(0) rotateZ(-20deg);
            transition: all 1s 1s;
          }

          &:nth-child(3) {
            top: 65%;
            left: 6rem;
            transform: translate(-4rem, 0) rotateY(180deg) rotateZ(-20deg);
            transition: all 1s 1.5s;
          }
        }

        &.active-icon {
          .message-svg {
            opacity: 1;

            &:nth-child(1) {
              top: 35%;
              left: 6rem;
              transform: translate(0, -50%) rotateY(180deg);
            }

            &:nth-child(2) {
              top: 50%;
              right: 6rem;
              transform: translate(0, -50%) rotateY(0);
            }

            &:nth-child(3) {
              top: 65%;
              left: 6rem;
              transform: translate(0, -50%) rotateY(180deg);
            }
          }
        }
      }
    }
    //*/

    // row text
    &__text {
      @include flex(column, center, start, 2rem);

      z-index: 1;
      opacity: 0;
      transform: translateY(5rem);
      transition: all 1s 0.5s;

      .row-h3 {
        $text-size: 3.2rem;

        @include flex($gap: calc($text-size / 2));

        font-size: $text-size;
        margin-left: calc($text-size / 2);
        filter: drop-shadow(0 0 1rem $gc6);

        .text-icon {
          height: $text-size;
        }

        span {
          padding-bottom: 0.2rem;
          border-bottom: dashed 0.2rem $mc0;
        }
      }

      .row-p {
        font-size: 1.8rem;
        color: $gc4;
      }
    }

    .active-text {
      transform: translateY(0);
      opacity: 1;
    }
    //*/
  }
  //*/
}
//*/

// resize
@media (max-width: 700px) {
  .zpattern {
    padding: 0;

    &__row {
      padding: 3rem;

      &:nth-child(odd) {
        @include flex(column-reverse, center, center, 2rem);
      }

      &:nth-child(even) {
        @include flex(column, center, center, 2rem);
      }

      &__icon {
        @include square(50% !important);
      }

      &__text {
        text-align: justify;

        .row-h3 {
          font-size: 4rem;
        }

        .row-p {
          font-size: 2.4rem;
        }
      }
    }
  }
}
//*/
