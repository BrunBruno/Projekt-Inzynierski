@import "../../../Index.scss";

// board
.board {
  @include square(60rem);

  position: relative;

  // flashlights
  // to add light effect on board
  @mixin boardSubElement {
    @include subCl(30rem, 30rem);

    z-index: -1;
    background-color: rgba($gc0, 0.2);
    box-shadow: 0 0 1rem 5rem rgba($gc0, 0.01);
    border-radius: 100%;
    filter: blur(4rem);
  }

  &::after {
    @include boardSubElement();

    top: 0;
    left: -5rem;
  }

  &::before {
    @include boardSubElement();

    bottom: -3rem;
    right: -3rem;
  }
  //*/

  &__grid {
    position: relative;
    overflow: hidden;

    border-radius: 4rem;
    background-color: $gc9;
    box-shadow: -2rem 2rem 0 0 $gc9;

    transform: rotateX(10deg) rotateY(10deg) rotateZ(-5deg);
    transform-style: preserve-3d;

    // inner board
    &__inner {
      position: relative;
      display: grid;
      grid-template-columns: auto;
      grid-template-rows: repeat(8, 1fr);
      gap: 0.5rem;

      overflow: hidden;
      border-radius: 4rem;
      border: solid 1rem $gc8;

      transition: box-shadow 1s, border-color 1s;

      .indicator {
        @include circle(20rem);

        z-index: -2;
        position: absolute;

        opacity: 0;
        background-color: $gc0;
        filter: blur(4rem);

        transform: translate(-60%, -60%);
      }

      .grid-row {
        display: grid;
        grid-template-columns: repeat(8, 1fr);
        gap: 0.5rem;
        z-index: -1;

        .tile {
          @include square(100%);

          filter: brightness(50%);
          border-radius: 0.5rem;
        }

        &:nth-child(even) {
          .tile {
            &:nth-child(odd) {
              background-color: rgba($mc1, 0.5);
            }
            &:nth-child(even) {
              background-color: rgba($mc9, 0.5);
            }
          }
        }

        &:nth-child(odd) {
          .tile {
            &:nth-child(even) {
              background-color: rgba($mc1, 0.5);
            }
            &:nth-child(odd) {
              background-color: rgba($mc9, 0.5);
            }
          }
        }
      }
    }

    .visible-inner {
      border-color: $gc0;
      box-shadow: inset 0 0 1rem 0.5rem $gc0;
    }
    //*/

    // outer board
    &__outer {
      @include absCenter;
      @include square(100%);

      display: grid;
      grid-template-columns: repeat(8, 1fr);
      grid-template-rows: repeat(8, 1fr);
      border: solid 1rem #0000;

      .board-svg {
        @include absCenter;

        height: 30%;
        filter: brightness(50%) drop-shadow(0 0 2rem $mc0);
        transition: filter 1s;
      }

      &:hover {
        cursor: none;
      }
    }

    .visible-outer {
      .board-svg {
        filter: brightness(80%) drop-shadow(0 0 2rem $mc0);
      }
    }
    //*/
  }
}
//*/

// resize
@media (min-width: 1000px) {
  .board {
    &__grid {
      .visible-outer {
        .board-svg {
          animation: svgAni 3s infinite linear 1s;

          @keyframes svgAni {
            0% {
              filter: brightness(80%) drop-shadow(0 0 1rem $mc0);
            }
            50% {
              filter: brightness(80%) drop-shadow(0 0 2rem $mc0);
            }
            100% {
              filter: brightness(80%) drop-shadow(0 0 1rem $mc0);
            }
          }
        }
      }
    }
  }
}
//*/
